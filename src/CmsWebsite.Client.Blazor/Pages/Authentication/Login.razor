@page "/login"
@layout AuthLayout
@inject NavigationManager navigationManager
@inject IAuthService auth

<div class="col-md-4 offset-md-4">

    <EditForm class="form-signin" OnValidSubmit="OnSubmit" Model="loginRequest">
        <DataAnnotationsValidator />

        <label for="inputUsername" class="sr-only m-1">Tên đăng nhập</label>
        <InputText id="inputUsername" class="form-control" @bind-Value="loginRequest.UserName" autofocus />
        <ValidationMessage For="@(() => loginRequest.UserName)" />

        <label for="inputPassword" class="sr-only m-1">Mật khẩu</label>
        <InputText type="password" id="inputPassword" class="form-control" @bind-Value="loginRequest.Password" />
        <ValidationMessage For="@(() => loginRequest.Password)" />

        <div class="col-md-6 form-check m-3">
            <InputCheckbox id="inputRememberMe" class="form-check-input" @bind-Value="@loginRequest.RememberMe" />
            <label class="form-check-label" for="inputRememberMe">Ghi nhớ đăng nhập</label>

        </div>

        <button class="btn btn-lg btn-primary btn-block m-2" style="width:100%" type="submit">@busyText</button>

        <NavLink href="register">
            <h6 class="font-weight-normal text-center" style="float:right">Tạo tài khoản !</h6>
        </NavLink>

        <label class="text-danger">@error</label>

    </EditForm>

</div>
@code {
    private string busyText { get; set; } = "Đăng nhập";
    LoginRequest loginRequest { get; set; } = new LoginRequest();
    private string error { get; set; }
    private bool ShowErrors;
    async Task OnSubmit()
    {
        busyText = "Đang đăng nhập...";
        error = null;
        ShowErrors = false;
        var result = await auth.Login(loginRequest);
        if (result.Successful)
        {
            navigationManager.NavigateTo("");
        }
        else
        {
            busyText = "Đăng nhập";
            ShowErrors = true;
            error = result.Error;
        }

    }
}