@page "/chitietbaiviet/{articleId:long}"
@using CmsWebsite.Client.Blazor.Services.Article
@using CmsWebsite.Share.Models.Article
@inject IArticleService _articleService
@inject NavigationManager MyNavigationManager
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inherits LayoutComponentBase

@if (article != null)
{
    <div class="container">
        <div class="col align-self-center">
            <div class="m-0 d-flex align-items-center">
                <span>Tác giả: @article.Author</span>
                &nbsp;&nbsp;&nbsp
                <div class="d-flex"><RadzenIcon Icon="today" Style="color:#e35d5dd9" /><span class="ms-1">@article.CreatedDate.ToString("dd/MM/yyyy HH:mm")</span></div>
                &nbsp;&nbsp;&nbsp
                @if (thisArticle.Like == false)
                {
                    <button type="button" @onclick="handleLike" class="btn d-flex" style="font-size:14px"><RadzenIcon Icon="favorite_border" Style="color: #f92f60;" /><span class="ms-1">Thích @article.Like</span></button>
                }
                else
                {
                    <button type="button" @onclick="handleLike" class="btn d-flex" style="font-size:14px"><RadzenIcon Icon="favorite" Style="color: #f92f60;" /><span class="ms-1">Thích @(article.Like + 1)</span></button>
                }
                @*@{
            if (mayLike != null)
            {
            foreach (var item in mayLike)
            {
            if (item.Id != article.ArticleID || item.Like == false)
            {
            <button type="button" @onclick="handleLike" class="btn d-flex" style="font-size:14px"><RadzenIcon Icon="favorite_border" Style="color: #f92f60;" /><span class="ms-1">Thích @article.Like</span></button>
            }
            else if (item.Like == true && item.Id == article.ArticleID)
            {
            <button type="button" @onclick="handleLike" class="btn d-flex" style="font-size:14px"><RadzenIcon Icon="favorite" Style="color: #f92f60;" /><span class="ms-1">Thích @(article.Like + 1)</span></button>
            }
            }
            }
            }*@
                &nbsp;&nbsp;&nbsp
                <a class="d-flex text-decoration-none text-reset" style="font-size:14px;" href="https://www.facebook.com/sharer/sharer.php?p[url]=@MyNavigationManager.Uri">
                    <RadzenIcon Icon="share" />
                    <span class="ms-1">Chia sẻ Facebook</span>
                </a>
            </div>
            <RadzenPanel>
                <HeaderTemplate>
                    <div class="col align-self-center">
                        <p style="text-transform: uppercase;font-size:30px">@(article.Title)</p>
                        <hr style="border: none; background-color: rgba(0,0,0,.08); height: 1px; margin: 1rem 0;" />
                        <b> @article.Description </b>
                    </div>

                </HeaderTemplate>
                <ChildContent>
                    <div style="max-width: 100%">@((MarkupString)article.SummaryArticle)</div>
                </ChildContent>
            </RadzenPanel>
        </div>
    </div>
}


@code {
    private async void handleLike()
    {
        if (thisArticle.Like == false)
        {
            thisArticle.Like = true;
            await _articleService.LikeArticle(articleId);
        }
        else
        {
            thisArticle.Like = false;
        }
    }
    const string key = "like";
    class MayLike
    {
        public MayLike(long id)
        {
            Id = id;
        }
        public MayLike(long id, bool like)
        {
            Id = id;
            Like = like;
        }
        public MayLike() { }
        public long Id { get; set; }
        public bool? Like { get; set; } = null;
    }

    List<MayLike>? mayLike; 
    MayLike? thisArticle;
    protected override async Task OnInitializedAsync()
    {


    }
    //private async void handleLike()
    //{
    //    foreach (var item in mayLike)
    //    {
    //        item.Id = article.ArticleID;
    //        if (item.Like == false)
    //        {
    //            mayLike.Remove(new MayLike(item.Id, item.Like));
    //            mayLike.Add(new MayLike(item.Id, item.Like));
    //            await localStorage.SetItemAsync(key, mayLike);
    //            item.Like = true;
    //        }
    //        else
    //        {
    //            mayLike.Remove(new MayLike(item.Id, item.Like));
    //            mayLike.Add(new MayLike(item.Id, item.Like));
    //            await localStorage.SetItemAsync(key, mayLike);
    //            item.Like = false;
    //        }
    //    }
    //}

    [Parameter]
    public long articleId { set; get; }

    private ArticleDTO article { get; set; } = new ArticleDTO();

    protected async override Task OnParametersSetAsync()
    {
        thisArticle = new MayLike(articleId);
        article = await _articleService.GetArticle(articleId);

        mayLike = await localStorage.GetItemAsync<List<MayLike>>(key);
        if (mayLike == null)
        {
            mayLike = new List<MayLike>();
            thisArticle.Like = false;

            mayLike.Add(thisArticle);
            await localStorage.SetItemAsync(key, mayLike);
        }
        else
        {
            foreach (var item in mayLike)
            {
                if (item.Id == thisArticle.Id)
                {
            Console.WriteLine(thisArticle.Id);
                    
                thisArticle.Like = item.Like;
                }
            }
            if (thisArticle.Like == null)
                thisArticle.Like = false;
        }
    }
}
